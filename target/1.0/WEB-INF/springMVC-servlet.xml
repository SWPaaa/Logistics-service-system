<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--如果配置了<context:component-scan>那么<context:annotation-config/>标签就可以不用再xml中配置了，因为前者包含了后者。-->
    <!-- 启用spring mvc 注解包 -->
    <context:annotation-config />
<!--    &lt;!&ndash; 不能加载的servlet映射 &ndash;&gt;-->
    <mvc:default-servlet-handler/>
    <!-- 自动扫描装配 -->
    <context:component-scan base-package="com.swp.*" />

    <!--    &lt;!&ndash; 注解的处理器适配器 &ndash;&gt;-->
    <!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
    <!--    &lt;!&ndash; 注解的处理器映射器 &ndash;&gt;-->
    <!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--     也可以使用下面的简化配置：,配置注解的处理器映射器和处理器适配器 -->
    <mvc:annotation-driven/>
    <!-- 配置视图解析器 -->
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        &lt;!&ndash; 使用前缀和后缀 &ndash;&gt;-->
<!--        <property name="prefix" value="/"></property>-->
<!--        <property name="suffix" value=".html"></property>-->
<!--    </bean>-->


<!--    &lt;!&ndash; 注册HandlerMapper、HandlerAdapter两个映射类 &ndash;&gt;-->
<!--    <mvc:annotation-driven >-->
<!--        &lt;!&ndash; 消息转换器 &ndash;&gt;-->
<!--        <mvc:message-converters register-defaults="true">-->
<!--            <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
<!--                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>-->
<!--            </bean>-->
<!--        </mvc:message-converters>-->
<!--    </mvc:annotation-driven>-->


    <!-- 模板解析器 -->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <!-- 模板文件的路径前缀 -->
        <property name="prefix" value="/" />
        <!-- 模板文件的路径后缀 -->
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- 配置是否缓存 -->
        <property name="cacheable" value="false" />
        <!-- 默认编码格式 -->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <!-- 模板引擎 -->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="enableSpringELCompiler" value="true" />
    </bean>
    <!-- 视图解析器 -->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>


    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 指定所上传文件的总大小不能超过500KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和。
        这个的大小是以字节为单位的，要多大自己算好了再设置-->
        <property name="maxUploadSize" value="500000"/>
        <!-- 最大内存大小 (10240)-->
        <property name="maxInMemorySize" value="40960" />
    </bean>
</beans>

